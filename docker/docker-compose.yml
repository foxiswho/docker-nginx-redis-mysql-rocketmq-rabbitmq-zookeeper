version: '3.5'

services:
  nginx:
      build: ./nginx
      ports:
        - "80:80"
      volumes:
        - ./nginx/vhost:/etc/nginx/conf/vhost:ro
      environment:
          - DEBUG=true
          - HOST_OS=linux
      networks:
              nrmrr:
                  aliases:
                    - nginx
  mysql:
      build: ./mysql
      hostname: mysql
      ports:
        - "3306:3306"
      environment:
        MYSQL_ROOT_PASSWORD: root
      volumes:
        - /tmp/:/tmp/
      networks:
                  nrmrr:
                      aliases:
                        - mysql

  redis:
      image: redis:latest
      ports:
        - "6379:6379"
      volumes:
        - /Users/:/Users/
      networks:
                  nrmrr:
                      aliases:
                        - redis
  rmqnamesrv:
    image: foxiswho/rocketmq:server
    container_name: rmqnamesrv
    ports:
      - 9876:9876
    volumes:
      - ./data/logs:/opt/logs
      - ./data/store:/opt/store
    networks:
      nrmrr:
        aliases:
        - rmqnamesrv
  rmqbroker:
    image: foxiswho/rocketmq:broker
    container_name: rmqbroker
    ports:
      - 10909:10909
      - 10911:10911
    volumes:
      - ./data/logs:/opt/logs
      - ./data/store:/opt/store
  #    - ./data/conf/broker.conf:/etc/rocketmq/broker.conf:ro
    environment:
      NAMESRV_ADDR: "rmqnamesrv:9876"
      JAVA_OPTS: " -Duser.home=/opt"
      JAVA_OPT_EXT: "-server -Xms128m -Xmx128m -Xmn128m"
    command: mqbroker -c /etc/rocketmq/broker.conf
    depends_on:
    - rmqnamesrv
    networks:
      nrmrr:
        aliases:
        - rmqbroker

  rmqconsole:
    image: styletang/rocketmq-console-ng
    container_name: rmqconsole
    ports:
    - 8180:8080
    environment:
      JAVA_OPTS: "-Drocketmq.namesrv.addr=rmqnamesrv:9876 -Dcom.rocketmq.sendMessageWithVIPChannel=false"
    depends_on:
    - rmqnamesrv
    networks:
      nrmrr:
        aliases:
        - rmqconsole
#zookeeper
  zoo1:
    image: zookeeper:3.4
    restart: always
    hostname: zoo1
    ports:
    - 2181:2181
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888 server.2=zoo2:2888:3888 server.3=zoo3:2888:3888
    networks:
      nrmrr:
        aliases:
        - zoo1
  zoo2:
    image: zookeeper:3.4
    restart: always
    hostname: zoo2
    ports:
    - 2182:2181
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=0.0.0.0:2888:3888 server.3=zoo3:2888:3888
    networks:
      nrmrr:
        aliases:
        - zoo2
  zoo3:
    image: zookeeper:3.4
    restart: always
    hostname: zoo3
    ports:
    - 2183:2181
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zoo1:2888:3888 server.2=zoo2:2888:3888 server.3=0.0.0.0:2888:3888
    networks:
      nrmrr:
        aliases:
        - zoo3
  #zookeeper 客户端
#  zookeeperCli:
#    image: zookeeper:3.4
#    restart: always
#    hostname: zookeeperCli
#    command: zkCli.sh -server zookeeper
#    networks:
#      nrmrr:
#        aliases:
#        - zookeeperCli
  consulServer1:
      image: consul
      command: consul agent -server -bind=10.2.1.101 -node=consulServer1 -bootstrap-expect=3 -data-dir /tmp/consul -client 0.0.0.0
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        nrmrr:
          aliases:
          - consulServer1
        nrmrr-c:
          ipv4_address: 10.2.1.101
          aliases:
          - consulServer1

  consulServer2:
      image: consul
      command: consul agent -server -bind=10.2.1.102 -node=consulServer2 -join 10.2.1.101 -data-dir /tmp/consul
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        nrmrr:
          aliases:
          - consulServer2
        nrmrr-c:
          ipv4_address: 10.2.1.102
          aliases:
          - consulServer2
      depends_on:
      - consulServer1

  consulServer3:
      image: consul
      command: consul agent -server -bind=10.2.1.103 -node=consulServer3 -join 10.2.1.101 -data-dir /tmp/consul
      environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
      networks:
        nrmrr:
          aliases:
          - consulServer3
        nrmrr-c:
          ipv4_address: 10.2.1.103
          aliases:
          - consulServer3
      depends_on:
      - consulServer1

  consulManger:
      image: consul
      command: consul agent -bind=10.2.1.100 -node=mangaer -join 10.2.1.101 -data-dir /tmp/consul -config-dir /consul/config -client 0.0.0.0 -ui
      ports:
      - "8500:8500"
      environment:
      - 'CONSUL_LOCAL_CONFIG={"leave_on_terminate": true,"enable_script_checks":true}'
      volumes:
      - ./data/consul/consul.d:/consul/config
      networks:
        nrmrr:
          aliases:
          - consulManger
        nrmrr-c:
          ipv4_address: 10.2.1.100
          aliases:
          - consulManger
      depends_on:
      - consulServer1

#  fabio:
#    image: magiconair/fabio
##    container_name: fabio
#    hostname: fabio
#    ports:
#      - "9998:9998"
#      - "9999:9999"
#    volumes:
#      - ./data/fabio/fabio.properties:/etc/fabio/fabio.properties
#    networks:
#      nrmrr:
#        aliases:
#        - fabio
#      nrmrr-c:
#        ipv4_address: 10.2.1.110
#        aliases:
#        - fabio
#      depends_on:
#      - consulServer1
networks:
  nrmrr:
    name: nrmrr
    driver: bridge
  nrmrr-c:
    name: nrmrr-c
    driver: macvlan
    ipam:
      driver: default
      config:
      - subnet: 10.2.1.0/24